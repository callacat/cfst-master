# .github/workflows/publish.yml

name: Unified Publish Workflow

on:
  # 1. 允许在 Actions 页面手动触发此工作流
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.0.0)'
        required: true
        type: string

  # 2. 在推送到 main 分支时自动触发
  push:
    branches:
      - main

jobs:
  build-and-publish:
    name: Build and Publish
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25'

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Determine Docker Tags
        id: docker_tags
        run: |
          # 如果是手动触发的发布事件
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            # 移除 'v' 前缀用于 Docker 标签
            VERSION_TAG=$(echo "${{ inputs.version }}" | sed 's/^v//')
            echo "tags=docker.io/${{ secrets.DOCKER_USERNAME }}/cfst-client:${VERSION_TAG},docker.io/${{ secrets.DOCKER_USERNAME }}/cfst-client:latest" >> $GITHUB_OUTPUT
          # 如果是推送到 main 分支的事件
          else
            echo "tags=docker.io/${{ secrets.DOCKER_USERNAME }}/cfst-client:latest" >> $GITHUB_OUTPUT
          fi

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.docker_tags.outputs.tags }}

      # --- 以下步骤仅在手动发布时执行 ---

      - name: Build binaries for release
        if: github.event_name == 'workflow_dispatch'
        run: |
          echo "Building binaries for release version ${{ inputs.version }}..."
          mkdir -p release_assets
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o release_assets/cfst-client-linux-amd64 ./cmd/main.go
          CGO_ENABLED=0 GOOS=linux GOARCH=arm64 go build -o release_assets/cfst-client-linux-arm64 ./cmd/main.go
          CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build -o release_assets/cfst-client-windows-amd64.exe ./cmd/main.go
          CGO_ENABLED=0 GOOS=windows GOARCH=386 go build -o release_assets/cfst-client-windows-386.exe ./cmd/main.go

      - name: Create GitHub Release and Upload Assets
        if: github.event_name == 'workflow_dispatch'
        uses: softprops/action-gh-release@v2
        with:
          # 使用输入的版本号来创建 Git 标签和 Release
          tag_name: ${{ inputs.version }}
          name: Release ${{ inputs.version }}
          body: |
            New release: ${{ inputs.version }}
          files: |
            release_assets/*

